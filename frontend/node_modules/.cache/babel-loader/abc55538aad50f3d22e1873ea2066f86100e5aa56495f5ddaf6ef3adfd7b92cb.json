{"ast":null,"code":"var _jsxFileName = \"/Users/hansonliao/Downloads/12-adv-starting-project/frontend/src/pages/Eventspage.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n\n// import EventsList from '../components/EventsList';\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n  //     // moved to app.js\n  //     // const response = await fetch('http://localhost:8080/events');\n\n  //     // if (!response.ok) {\n  //     //   setError('Fetching events failed.');\n  //     // } else {\n  //     //   const resData = await response.json();\n  //     //   setFetchedEvents(resData.events);\n  //     // }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", data.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not fetch events'}\n    // throw { message: 'Could not fetch events' }\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch Events\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n\n    // the other way to do it:\n    // const resData = await response.json();\n    // // return resData.events;\n\n    // // this is a modern browser feature\n    // const res = new Response('any data', {status: 201});\n  }\n}\n\n// LOADER FUNCTION =============================================================\n// CANNOT USE REACT COMPONENTS LIKE USESTATE, USE EFFECT ,etc\nexport async function loader() {}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","Response","JSON","stringify","status","loader","$RefreshReg$"],"sources":["/Users/hansonliao/Downloads/12-adv-starting-project/frontend/src/pages/Eventspage.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\n// import EventsList from '../components/EventsList';\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n  //     // moved to app.js\n  //     // const response = await fetch('http://localhost:8080/events');\n\n  //     // if (!response.ok) {\n  //     //   setError('Fetching events failed.');\n  //     // } else {\n  //     //   const resData = await response.json();\n  //     //   setFetchedEvents(resData.events);\n  //     // }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  const data = useLoaderData();\n  const events = data.events;\n\n  if (data.isError) {\n    return <p> {data.message} </p>;\n  }\n\n  return (\n    <>\n      {/* <div style={{ textAlign: 'center' }}>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div> */}\n      {/* {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} */}\n      {<EventsList events={events} />}\n    </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not fetch events'}\n    // throw { message: 'Could not fetch events' }\n    throw new Response(JSON.stringify({ message: \"Could not fetch Events\" }), {\n      status: 500,\n    });\n  } else {\n    return response;\n\n    // the other way to do it:\n    // const resData = await response.json();\n    // // return resData.events;\n\n    // // this is a modern browser feature\n    // const res = new Response('any data', {status: 201});\n  }\n}\n\n// LOADER FUNCTION =============================================================\n// CANNOT USE REACT COMPONENTS LIKE USESTATE, USE EFFECT ,etc\nexport async function loader() {\n  \n}\n"],"mappings":";;AAAA;;AAEA;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,IAAID,IAAI,CAACE,OAAO,EAAE;IAChB,oBAAOP,OAAA;MAAAQ,QAAA,GAAG,GAAC,EAACH,IAAI,CAACI,OAAO,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eAMGR,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC/B,CAAC;AAEP;AAACT,EAAA,CAxCQD,UAAU;EAAA,QAuBJN,aAAa;AAAA;AAAAiB,EAAA,GAvBnBX,UAAU;AA0CnB,eAAeA,UAAU;AAEzB,eAAeY,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEZ,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEa,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAON,QAAQ;;IAEf;IACA;IACA;;IAEA;IACA;EACF;AACF;;AAEA;AACA;AACA,OAAO,eAAeO,MAAMA,CAAA,EAAG,CAE/B;AAAC,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}